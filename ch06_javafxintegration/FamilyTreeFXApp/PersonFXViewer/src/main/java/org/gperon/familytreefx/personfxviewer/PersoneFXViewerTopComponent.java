/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/NetBeansModuleDevelopment-files/templateTopComponent637.java to edit this template
 */
package org.gperon.familytreefx.personfxviewer;

import java.io.IOException;
import java.net.URL;
import java.util.concurrent.CountDownLatch;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import javafx.embed.swing.JFXPanel;
import javafx.fxml.FXMLLoader;
import javafx.fxml.JavaFXBuilderFactory;
import javafx.scene.Parent;
import javafx.scene.Scene;
import org.openide.LifecycleManager;
import org.openide.util.lookup.AbstractLookup;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.gperon.familytreefx.personfxviewer//PersoneFXViewer//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "PersoneFXViewerTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.gperon.familytreefx.personfxviewer.PersoneFXViewerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_PersoneFXViewerAction",
        preferredID = "PersoneFXViewerTopComponent"
)
@Messages({
    "CTL_PersoneFXViewerAction=PersoneFXViewer",
    "CTL_PersoneFXViewerTopComponent=PersoneFXViewer Window",
    "HINT_PersoneFXViewerTopComponent=This is a PersoneFXViewer window"
})
public final class PersoneFXViewerTopComponent extends TopComponent {

    private PersonFXViewerController controller;
    private static final Logger logger = Logger.getLogger(PersoneFXViewerTopComponent.class.getName());

    public PersoneFXViewerTopComponent() {
        initComponents();
        setName(Bundle.CTL_PersoneFXViewerTopComponent());
        setToolTipText(Bundle.HINT_PersoneFXViewerTopComponent());
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fxPanel = new javafx.embed.swing.JFXPanel();

        setLayout(new java.awt.BorderLayout());
        add(fxPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javafx.embed.swing.JFXPanel fxPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void init() {
        Platform.setImplicitExit(false);
        final CountDownLatch latch = new CountDownLatch(1);
        Platform.runLater(() -> {
            try {
                createScene();
            } finally {
                latch.countDown();
            }
        });
        try {
            latch.await();
            associateLookup(new AbstractLookup(controller.getInstanceContent()));
        } catch (InterruptedException e) {
            logger.log(Level.SEVERE, "JavaFX initialization interrupted");
            LifecycleManager.getDefault().exit();
        }
    }

    private void createScene() {
        try {
            URL location = getClass().getResource("PersonFXML.fxml");
            FXMLLoader fxmlLoader = new FXMLLoader();
            fxmlLoader.setLocation(location);
            fxmlLoader.setBuilderFactory(new JavaFXBuilderFactory());
            Parent root = fxmlLoader.load(location.openStream());
//            Parent root = FXMLLoader.load(getClass().getResource("PersonFXViewer.fxml"));

            Scene scene = new Scene(root);
            fxPanel.setScene(scene);
            controller = (PersonFXViewerController) fxmlLoader.getController();
        } catch (IOException e) {
        }
    }
}
